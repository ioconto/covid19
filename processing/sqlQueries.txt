Population data - 7904 rows
SELECT m.istatId, nameItSt, regionName, nameSubReg, population 
FROM `it-municipalities` m

Geocodes - 7856
SELECT `m`.istatId, nameItSt, regionName, nameSubReg, population, `g`.lat, `g`.lng 
FROM `it-municipalities` m
INNER JOIN `it-municipalities-geo` g on m.`istatId` = g.`istatId`

Check that deaths for municipalities have been imported correctly
SELECT count(istatId),name 
FROM `it-municipalities-deaths-raw` 
GROUP BY istatId, name
HAVING count(istatId) <> 121

Istat deaths
SELECT 
	count(istatId),
    name,
    month,
    sum(`deaths2015`) AS d15,
    sum(`deaths2016`) AS d16,
    sum(`deaths2017`) AS d17,
    sum(`deaths2018`) AS d18,
    sum(`deaths2019`) AS d19
FROM `it-municipalities-deaths-raw` 
GROUP BY istatId, name, month


CREATE TABLE it_municipalities_deaths_by_month AS 
SELECT 
	  istatId,
    name,
    month,
    sum(`deaths2015`) AS d15,
    sum(`deaths2016`) AS d16,
    sum(`deaths2017`) AS d17,
    sum(`deaths2018`) AS d18,
    sum(`deaths2019`) AS d19
FROM `it-municipalities-deaths-raw` 
GROUP BY istatId, name, month





CREATE TABLE `it-municipalities-deaths-2` (
  `istatId` int(11) NOT NULL,
  `name` varchar(255) NOT NULL,
  `prov` int(11) NOT NULL,
  `provName` varchar(255) NOT NULL,
  `region` int(11) NOT NULL,
  `regionName` varchar(255) NOT NULL,
  `month` int(11) NOT NULL,
  `day` int(11) NOT NULL,
  `deaths2015` int(11) NOT NULL,
  `deaths2016` int(11) NOT NULL,
  `deaths2017` int(11) NOT NULL,
  `deaths2018` int(11) NOT NULL,
  `deaths2019` int(11) NOT NULL
)


INSERT INTO `it-municipalities-deaths-raw`
SELECT * FROM `it-municipalities-deaths-2`



CREATE TABLE `it-municipalities-deaths-march20` (
  `regId` int(11) NOT NULL,
  `provId` int(11) NOT NULL,
  `region` varchar(255) NOT NULL,
  `province` varchar(255) NOT NULL,
  `name` varchar(255) NOT NULL,
  `istatId` int(11) NOT NULL,
  `ageClass` int(11) NOT NULL,
  `day` varchar(4) NOT NULL,
  `m15` int(11) NOT NULL,
  `m16` int(11) NOT NULL,
  `m17` int(11) NOT NULL,
  `m18` int(11) NOT NULL,
  `m19` int(11) NOT NULL,
  `m20` int(11) NOT NULL,
  `f15` int(11) NOT NULL,
  `f16` int(11) NOT NULL,
  `f17` int(11) NOT NULL,
  `f18` int(11) NOT NULL,
  `f19` int(11) NOT NULL,
  `f20` int(11) NOT NULL,
  `t15` int(11) NOT NULL,
  `t16` int(11) NOT NULL,
  `t17` int(11) NOT NULL,
  `t18` int(11) NOT NULL,
  `t19` int(11) NOT NULL,
  `t20` int(11) NOT NULL
)

SELECT
	istatId,
    name,
    SUBSTR(dayS,1,2),
    SUBSTR(dayS,3,2)
FROM `it-municipalities-deaths-march20-raw`

Estrae il giorno mese dalla colonna dayS
UPDATE `it-municipalities-deaths-march20-raw`
SET
    month = SUBSTR(dayS,1,2),
    day = SUBSTR(dayS,3,2)

Municipalities List with 2020 march data
SELECT `istatId`, `name` 
FROM `it-municipalities-deaths-march20-raw`
WHERE t20 <> 9999 AND month = 3
GROUP BY `istatId`, `name`

Select all deaths for march 20
SELECT 
	`istatId`,
    `name`,
    sum(t20) as d20
FROM `it-municipalities-deaths-march20-raw`
WHERE
	t20 <> 9999 AND
    month = 3
GROUP BY `istatId`, `name`

SELECT * 
FROM `it_municipalities_deaths_by_month` m
LEFT OUTER JOIN `it_municipalities_deaths_march20` r ON m.`istatId` = r.`istatId`


Update main deaths table with march 1-21 deaths for 1084 municipalities
UPDATE `it_municipalities_deaths_by_month` m
INNER JOIN `it_municipalities_deaths_march20` r ON m.`istatId` = r.`istatId`
SET m.d20 = r.d20 AND m.march = 1
WHERE m.month = 3

Extract data for csv/json
SELECT * FROM `it_municipalities_deaths_by_month` WHERE month = 3 and march = 1

SELECT d.*, m.population, m.nameItSt, g.lng, g.lat
FROM 
	`it_municipalities_deaths_by_month` d
    INNER JOIN `it-municipalities` m ON d.istatId = m.istatId 
    INNER JOIN `it-municipalities-geo` g ON d.istatId = g.istatId
WHERE
	d.month = 3 AND 
    d.`istatMarch` = 1

Missing Geodata
SELECT d.*, m.population, m.nameItSt, g.lng, g.lat
FROM 
	`it_municipalities_deaths_by_month` d
    INNER JOIN `it-municipalities` m ON d.istatId = m.istatId 
    LEFT OUTER JOIN `it-municipalities-geo` g ON d.istatId = g.istatId
WHERE
	d.month = 3 AND 
    d.istatMarch = 1 AND
    g.lng IS NULL

Upload Brescia e Bergamo
SELECT d.*, b.*
FROM 
	`it_municipalities_deaths_by_month` d
    INNER JOIN `it-deaths-bergamo` b ON d.istatId = b.istatId 
WHERE
	d.month = 3

UPDATE `it_municipalities_deaths_by_month` m
INNER JOIN `it-deaths-bergamo` r ON m.`istatId` = r.`istatId`
SET 
    m.mar19 = r.mar19,
    m.mar20 = r.mar20,
    m.officialCovid = r.officialCovid,
    m.ecoBG = 1
WHERE m.month = 3

UPDATE `it_municipalities_deaths_by_month` m
INNER JOIN `it-deaths-brescia` r ON m.`istatId` = r.`istatId`
SET 
    m.mar19 = r.mar19,
    m.mar20 = r.mar20,
    m.officialCovid = r.officialCovid,
    m.bsToday = 1
WHERE m.month = 3

Produzione tabella per json finale

SELECT * 
FROM `it_municipalities_deaths_by_month`
WHERE
	`istatMarch` = 1 OR
    `ecoBG` = 1 OR
    `bsToday` = 1

Selects only march deaths between 1 and 21
SELECT 
	istatId,
    name,
    month,
    sum(`deaths2015`) AS d15,
    sum(`deaths2016`) AS d16,
    sum(`deaths2017`) AS d17,
    sum(`deaths2018`) AS d18,
    sum(`deaths2019`) AS d19
FROM `it-municipalities-deaths-raw` 
WHERE
	month = 3 AND
    day BETWEEN 1 AND 21
GROUP BY istatId, name, month

CREATE TABLE `it_municipalities_deaths_by_m20_1-21` AS
SELECT 
	istatId,
    name,
    month,
    sum(`deaths2015`) AS d15,
    sum(`deaths2016`) AS d16,
    sum(`deaths2017`) AS d17,
    sum(`deaths2018`) AS d18,
    sum(`deaths2019`) AS d19
FROM `it-municipalities-deaths-raw` 
WHERE
	month = 3 AND
    day BETWEEN 1 AND 21
GROUP BY istatId, name, month

Update final table with march deaths only referred to 1-21
UPDATE `it_municipalities_deaths_march_FINAL` m
INNER JOIN `it_municipalities_deaths_by_m20_1-21` r ON m.`istatId` = r.`istatId`
SET
	m.d15 = r.d15,
	m.d16 = r.d16,
	m.d17 = r.d17,
	m.d18 = r.d18,
	m.d19 = r.d19

SELECT
	d.*,
    m.population,
    m.nameItSt,
    g.lng,
    g.lat
FROM 
	`it_municipalities_deaths_march_FINAL` d
    INNER JOIN `it-municipalities` m ON d.istatId = m.istatId 
    INNER JOIN `it-municipalities-geo` g ON d.istatId = g.istatId
WHERE
	d.month = 3 AND 
    (`istatMarch` = 1 OR
    `ecoBG` = 1 OR
    `bsToday` = 1)


Update province and region
UPDATE `it_municipalities_deaths_march_FINAL` m
INNER JOIN `it-municipalities` r ON m.istatId = r.istatId
SET
	m.province = r.nameSubReg,
    m.region = r.regionName    


Was there any problem before march?

this retrieves data just for the 1084 municipalities
SELECT 
	`istatId`,
    `name`,
    month,
    sum(t20) as d20
FROM `it-municipalities-deaths-march20-raw`
WHERE
	t20 <> 9999 
GROUP BY `istatId`, `name`, month


*******  QUERY TO GET DAILY DATA TO PRODUCE GRAPHS  ****
SELECT 
	`istatId`,
    `name`,
    month,
    day,
    (sum(t15)+ sum(t16) + sum(t17) + sum(t18) + sum(t19)) / 5 as avg,
    sum(t20) as d20
FROM `it-municipalities-deaths-march20-raw`
WHERE
	istatId =  16144 AND
    t20 <> 9999
GROUP BY `istatId`, `name`, month, day



SELECT 
	`istatId`,
    `name`,
    month,
    day
    (sum(t15)+ sum(t16) + sum(t17) + sum(t18) + sum(t19)) / 5 as avg,
    sum(t20) as d20
FROM `it-municipalities-deaths-march20-raw`
WHERE
	istatId =  16144 AND
    t20 <> 9999 AND
	month = 1 AND
    day < 16
    
GROUP BY `istatId`, `name`, month, day


Calculate total diff by date
SELECT 
	`istatId`,
    `name`,
    (sum(t15)+ sum(t16) + sum(t17) + sum(t18) + sum(t19)) / 5 as avg,
    sum(t20) as d20,
    sum(t20) - ((sum(t15)+ sum(t16) + sum(t17) + sum(t18) + sum(t19)) / 5) as delta
FROM `it-municipalities-deaths-march20-raw`
WHERE
	istatId =  16144 AND
    t20 <> 9999 AND
	month = 1 AND
    day < 16
GROUP BY `istatId`, `name`


SELECT 
	`istatId`,
    `name`,
    (sum(t15)+ sum(t16) + sum(t17) + sum(t18) + sum(t19)) / 5 as avg,
    sum(t20) as d20,
    sum(t20) - ((sum(t15)+ sum(t16) + sum(t17) + sum(t18) + sum(t19)) / 5) as delta,
    (sum(t20) - ((sum(t15)+ sum(t16) + sum(t17) + sum(t18) + sum(t19)) / 5)) / ((sum(t15)+ sum(t16) + sum(t17) + sum(t18) + sum(t19)) / 5) as perc
FROM `it-municipalities-deaths-march20-raw`
WHERE
	istatId =  16144 AND
    t20 <> 9999 AND
	month = 1 AND
    day < 16
GROUP BY `istatId`, `name`
HAVING delta > 5

Extract all municipalities with increase higher than 50%

January 15
SELECT 
	`istatId`,
    `name`,
    (sum(t15)+ sum(t16) + sum(t17) + sum(t18) + sum(t19)) / 5 as avg,
    sum(t20) as d20,
    sum(t20) - ((sum(t15)+ sum(t16) + sum(t17) + sum(t18) + sum(t19)) / 5) as delta,
    (sum(t20) - ((sum(t15)+ sum(t16) + sum(t17) + sum(t18) + sum(t19)) / 5)) / ((sum(t15)+ sum(t16) + sum(t17) + sum(t18) + sum(t19)) / 5) as perc
FROM `it-municipalities-deaths-march20-raw`
WHERE
    t20 <> 9999 AND
	month = 1 AND
    day < 16
GROUP BY `istatId`, `name`
HAVING perc > 0.5 AND delta > 4
ORDER BY perc DESC

January 31
SELECT 
	`istatId`,
    `name`, 
    (sum(t15)+ sum(t16) + sum(t17) + sum(t18) + sum(t19)) / 5 as avg,
    sum(t20) as d20,
    sum(t20) - ((sum(t15)+ sum(t16) + sum(t17) + sum(t18) + sum(t19)) / 5) as delta,
    (sum(t20) - ((sum(t15)+ sum(t16) + sum(t17) + sum(t18) + sum(t19)) / 5)) / ((sum(t15)+ sum(t16) + sum(t17) + sum(t18) + sum(t19)) / 5) as perc
FROM `it-municipalities-deaths-march20-raw`
WHERE
    t20 <> 9999 AND
	(month = 1)
GROUP BY `istatId`, `name`
HAVING perc > 0.5 AND delta > 5
ORDER BY perc DESC

February 15
SELECT 
	`istatId`,
    `name`, 
    (sum(t15)+ sum(t16) + sum(t17) + sum(t18) + sum(t19)) / 5 as avg,
    sum(t20) as d20,
    sum(t20) - ((sum(t15)+ sum(t16) + sum(t17) + sum(t18) + sum(t19)) / 5) as delta,
    (sum(t20) - ((sum(t15)+ sum(t16) + sum(t17) + sum(t18) + sum(t19)) / 5)) / ((sum(t15)+ sum(t16) + sum(t17) + sum(t18) + sum(t19)) / 5) as perc
FROM `it-municipalities-deaths-march20-raw`
WHERE
    t20 <> 9999 AND
	(month = 1 OR (month = 2 AND day < 16 ))
GROUP BY `istatId`, `name`
HAVING perc > 0.5 AND delta > 5
ORDER BY perc DESC

February 29
SELECT 
	`istatId`,
    `name`, 
    (sum(t15)+ sum(t16) + sum(t17) + sum(t18) + sum(t19)) / 5 as avg,
    sum(t20) as d20,
    sum(t20) - ((sum(t15)+ sum(t16) + sum(t17) + sum(t18) + sum(t19)) / 5) as delta,
    (sum(t20) - ((sum(t15)+ sum(t16) + sum(t17) + sum(t18) + sum(t19)) / 5)) / ((sum(t15)+ sum(t16) + sum(t17) + sum(t18) + sum(t19)) / 5) as perc
FROM `it-municipalities-deaths-march20-raw`
WHERE
    t20 <> 9999 AND
	month in (1,2)
GROUP BY `istatId`, `name`
HAVING perc > 0.5 AND delta > 5
ORDER BY perc DESC


SELECT DISTINCT b.istatId, b.name , population
FROM `badguys` b
INNER JOIN `it-municipalities` m on b.istatId = m.istatId
ORDER BY population DESC

*** Really bad guys ***
SELECT 
	`istatId`,
    `name`, 
    (sum(t15)+ sum(t16) + sum(t17) + sum(t18) + sum(t19)) / 5 as avg,
    sum(t20) as d20,
    sum(t20) - ((sum(t15)+ sum(t16) + sum(t17) + sum(t18) + sum(t19)) / 5) as delta,
    (sum(t20) - ((sum(t15)+ sum(t16) + sum(t17) + sum(t18) + sum(t19)) / 5)) / ((sum(t15)+ sum(t16) + sum(t17) + sum(t18) + sum(t19)) / 5) as perc
FROM `it-municipalities-deaths-march20-raw`
WHERE
    t20 <> 9999 
GROUP BY `istatId`, `name`
HAVING perc > 1 AND delta > 5
ORDER BY avg DESC

Query to select data for Bergamo province by municipality
SELECT 
	d.`istatId`,
    d.`name`,
    m.population,
    (sum(t15)+ sum(t16) + sum(t17) + sum(t18) + sum(t19)) / 5 as avg,
    sum(t20) as d20
FROM `it-municipalities-deaths-march20-raw` d
INNER JOIN `it-municipalities` m ON d.istatId = m.istatId
WHERE
    t20 <> 9999 AND
    nameSubReg = 'Bergamo'
GROUP BY d.`istatId`, d.`name`, m.population

Bergamo Province by day
SELECT 
	month,
    day,
    (sum(t15)+ sum(t16) + sum(t17) + sum(t18) + sum(t19)) / 5 as avg,
    sum(t20) as d20
FROM `it-municipalities-deaths-march20-raw` d
INNER JOIN `it-municipalities` m ON d.istatId = m.istatId
WHERE
    d.t20 <> 9999 AND
    m.nameSubReg = 'Bergamo'
GROUP BY month, day

SELECT 
	month,
    day,
    (sum(t15)+ sum(t16) + sum(t17) + sum(t18) + sum(t19)) / 5 as avg,
    sum(t20) as d20
FROM `it-municipalities-deaths-march20-raw` 
INNER JOIN `it-municipalities` ON `it-municipalities-deaths-march20-raw`.`istatId` = `it-municipalities`.`istatId`
WHERE
    t20 <> 9999 AND
    nameSubReg = 'Bergamo'
GROUP BY month, day